version: "3.11" # 이 부분은 docker compose 2.25 이상 부터는 필요없다고 한다.

services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db
 

  db: # PostgreSQL Database
    image: postgres:13-alpine
    restart: always
    volumes: 
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
  
  proxy:
    build: 
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - 80:8000 # ec2-123-123-123.com/api/v1 (from:to)
      # - 8000:8000 # 로컬에서 테스트시
    volumes:
      - static-data:/vol/static

  volumes:
    postgres-data:
      driver: local
    static-data:

# version: "3.11"
# services:
#   app:
#     build:
#       context: .
#       args:
#         - DEV=true
#     ports: "9000:8000"
#     volumes: 
#       -  ./app:/app
#       - static-data:/vol/web
#     environment:
#       - DB_HOST=db
#       - DB_NAME=${DB_NAME}
#       - DB_USER=${DB_USER}
#       - DB_PASS=${DB_PASS}
#       - SECRET_KEY=${DJANGO_SECRET_KEY}
#       - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
#       - PYTHONPATH=/app
#     depends_on:
#       - db

#   db:
#     image: postgres:16.3-alpine3.20
#     restart: always
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=${DB_NAME}
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASS}

#   proxy:
#     build:
#       context: ./proxy
#     restart: always
#     depends_on:
      
#   app:
#     ports: "80:80"  # Public port mapping
#     volumes:
#       - static-data:/vol/static
#     environment:
#       - LISTEN_PORT=80  # Nginx will listen on port 80
#       - APP_HOST=app
#       - APP_PORT=9000  # Django app will run on port 9000 internally

#   volumes:
#     postgres-data:
#     static-data: